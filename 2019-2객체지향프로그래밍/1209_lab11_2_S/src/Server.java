import java.net.*;
import java.util.StringTokenizer;
import java.io.*;

public class Server {
	public static int plus(int a,int c) {
		return a + c;
	}//end plus
	public static int minus(int a,int c) {
		return a - c;
	}
	public static int multi(int a,int c) {
		return a * c;
	}
	public static void main(String[] args){
		try{
			// 1. 10001번 포트에서 동작하는 ServerSocket을 생성
			ServerSocket server = new ServerSocket(9939);
			BufferedReader keyboard =new BufferedReader(new InputStreamReader(System.in));
			System.out.println("Wating for connection.");
			// 2. ServerSocket의 accept() 메소드를 실행해서 클라이언트의 접속을 대기
			// : 클라이언트가 접속할 경우 accept() 메소드는 Socket 객체를 반환
			Socket sock = server.accept();
			System.out.println("We are connected!");
			// 3. 반환받은 Socket으로부터 InputStream과 OutputStream을 구함
			OutputStream out = sock.getOutputStream();
			InputStream in = sock.getInputStream();
			// 4. InputStream은 BufferedReader 형식으로 변환
			//    OutputStream은 PrintWriter 형식으로 변환
			PrintWriter pw = new PrintWriter(new OutputStreamWriter(out));
			BufferedReader br = new BufferedReader(new InputStreamReader(in));
			String line = null;
			//5. BufferedReader의 readLine() 메소드를 이용해
			//   클라이언트가 보내는 문자열 한 줄을 읽어들임
			while((line = br.readLine()) != null){
				if(line.equals("Bye")) break;
				System.out.println(line);
				StringTokenizer st = new StringTokenizer(line," ");
				int a = Integer.parseInt(st.nextToken());
				String b = st.nextToken();
				int c = Integer.parseInt(st.nextToken());
				int d =0;
				if (b.equals("+")) {
					d = plus(a,c);
				}
				else if (b.equals("-")){
					d = minus(a,c);
				}
				else {
					d = multi(a,c);
				}				// 6. PrintWriter의 println을 이용해 다시 클라이언트로 전송
				pw.println(d);
				pw.flush();
			}
			System.out.println("Client said Bye!");
			// 6. IO 객체와 소켓의 close() 메소드 호출
			pw.close();
			br.close();
			sock.close();

		} catch(Exception e){
			System.out.println(e);
		}
		
	}//end main
}
